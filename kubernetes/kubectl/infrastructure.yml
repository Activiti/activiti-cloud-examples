---
apiVersion: v1
kind: ConfigMap
metadata:
  name: deployments-config
  namespace: default
data:
  deployments: |
    {
      "appDeploymentEntries": [
        {
          "name": "default-app",
          "version": "1.0"
        }
      ]
    }
  default-app: |-
    {
      "applicationName": "default-app",
      "applicationVersion": "1.0",
      "serviceDeploymentDescriptors": [
        {
          "name": "rb-my-app",
          "version": "0.1",
          "serviceType": "runtime-bundle"
        },
        {
          "name": "activiti-cloud-query",
          "version": "0.1",
          "serviceType": "query"
        },
        {
          "name": "activiti-cloud-audit",
          "version": "0.1",
          "serviceType": "audit"
        }
      ]
    }
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  template:
    metadata:
      name: rabbitmq
      labels:
        app: infrastructure
        serviceType: message-broker
    spec:
      containers:
        - name: rabbitmq
          image: activiti/rabbitmq-stomp
          ports:
          - containerPort: 5672
          - containerPort: 15672
          - containerPort: 61613
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: activiti-cloud-sso-idm-kub
spec:
  replicas: 1
  template:
    metadata:
      name: activiti-cloud-sso-idm-kub
      labels:
        app: infrastructure
        serviceType: sso-idm
    spec:
      containers:
      - name: activiti-cloud-sso-idm-kub
        image: activiti/activiti-cloud-sso-idm:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 30081
        env:
#        - name: JAVA_OPTS
#          value: -Xmx256m -Xms256m
        - name: PORT_OFFSET
          value: "22001"
        - name: DB_VENDOR
          value: "H2"
---
apiVersion: v1
kind: Service
metadata:
  name: activiti-cloud-sso-idm-kub
  namespace: default
spec:
  selector:
    serviceType: sso-idm
  ports:
    - port: 30081
      targetPort: 30081
      nodePort: 30081 # uncomment for minikube, comment for Kube
  type: NodePort #NodePort for minikube, LoadBalancer for Kube
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: activiti-cloud-gateway
  labels:
    app: infrastructure
    serviceType: gateway
spec:
  replicas: 1
  template:
    metadata:
      name: activiti-cloud-gateway
      labels:
        app: infrastructure
        serviceType: gateway
    spec:
      containers:
        - name: activiti-cloud-gateway
          image: activiti/activiti-cloud-gateway:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
          env:
          - name: JAVA_OPTS
            value: -Xmx64m -Xms64m
          - name: ACT_KEYCLOAK_URL
            value: "http://activiti-cloud-sso-idm-kub:30081/auth"
          - name: ZUUL_ROUTES_APPS_URL
            value: "http://activiti-cloud-apps:8080"
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: activiti-cloud-registry
  labels:
    app: infrastructure
    serviceType: registry
spec:
  replicas: 1
  template:
    metadata:
      name: activiti-cloud-registry
      labels:
        app: infrastructure
        serviceType: registry
    spec:
      containers:
        - name: activiti-cloud-registry
          image: activiti/activiti-cloud-registry:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8761
          env:
          - name: JAVA_OPTS
            value: -Xmx64m -Xms64m
          - name: SPRING_APPLICATION_NAME
            value: "registry"
          - name: ACT_CLOUD_CONFIG_SERVER_ENABLED
            value: "true"
          - name: SPRING_PROFILES_ACTIVE
            value: "native"
          - name: ACTIVITI_CLOUD_SERVICES_APPSERVICE_ENABLED
            value: "false"
          volumeMounts:
          - name: deployments-config
            mountPath: /config
      volumes:
        - name: deployments-config
          configMap:
            name: deployments-config
            items:
            - key: deployments
              path:  apps.json
            - key: default-app
              path:  default-app.json
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: activiti-cloud-apps
  labels:
    app: infrastructure
    serviceType: apps
spec:
  replicas: 1
  template:
    metadata:
      name: activiti-cloud-apps
      labels:
        app: infrastructure
        serviceType: apps
    spec:
      containers:
        - name: activiti-cloud-apps
          image: activiti/activiti-cloud-apps:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
            name: "apps"
          env:
          - name: JAVA_OPTS
            value: -Xmx64m -Xms64m -agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n
          - name: SPRING_APPLICATION_NAME
            value: "apps"
          - name: ACTIVITI_CLOUD_SERVICES_APPSERVICE_ENABLED
            value: "true"
          - name: ACTIVITI_CLOUD_CONFIG_URL
            value: "http://activiti-cloud-registry:8761/config"
          - name: ACT_KEYCLOAK_URL
            value: "http://activiti-cloud-sso-idm-kub:30081/auth"
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: default
spec:
  selector:
    serviceType: message-broker
  ports:
    - port: 5672
      name: broker
      targetPort: 5672
    - port: 15672
      name: admin
      targetPort: 15672
    - port: 61613
      name: stomp
      targetPort: 61613
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: activiti-cloud-registry
  namespace: default
spec:
  selector:
    serviceType: registry
  ports:
    - port: 8761
      targetPort: 8761
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: activiti-cloud-apps
  namespace: default
spec:
  selector:
    serviceType: apps
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: entrypoint
  namespace: default
spec:
  selector:
    serviceType: gateway
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30080 # uncomment for minikube, comment for Kube
  type: NodePort #NodePort for minikube, LoadBalancer for Kube
---